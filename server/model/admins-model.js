// Generated by CoffeeScript 1.3.3
(function() {
  var AdminsModel, events, exports, services, vo;

  services = require('mongoose');

  vo = require('./vo/admins');

  events = require('events');

  exports = module.exports = new events.EventEmitter();

  exports.AdminsModel = AdminsModel = services.model('c-admins', vo.AdminsSchema);

  exports.find = function(obj, query, radom) {
    return obj.findOne({
      'username': query.username.toLowerCase(),
      'password': query.password.toLowerCase()
    }, function(err, admin) {
      if (!err) {
        return exports.emit(radom + '_admins_signin_success', admin === null ? admin : vo.obj2json(admin));
      } else {
        return exports.emit(radom + '_admins_signin_error', err);
      }
    });
  };

  exports.findUsername = function(obj, username, radom) {
    return obj.findOne({
      'username': username.toLowerCase()
    }, function(err, admin) {
      if (!err) {
        return exports.emit(radom + '_admins_findusername_success', admin);
      } else {
        return exports.emit(radom + '_admins_findusername_error', err);
      }
    });
  };

  exports.findAll = function(obj, radom) {
    return obj.find({}, function(err, admins) {
      if (!err) {
        return exports.emit(radom + '_admins_findall_success', admins);
      } else {
        return exports.emit(radom + '_admins_findall_error', err);
      }
    });
  };

  exports.add = function(obj, radom) {
    return obj.save(function(err) {
      if (!err) {
        return exports.emit(radom + '_admins_add_success', null);
      } else {
        return exports.emit(radom + '_admins_add_error', err);
      }
    });
  };

  exports.save = function(obj, username, updates, random) {
    var conditions, options;
    conditions = {
      username: username
    };
    updates = {
      $set: updates
    };
    options = {
      multi: true
    };
    return obj.update(conditions, updates, options, function(err) {
      if (!err) {
        return exports.emit(random + '_admins_save_success', 'succeess');
      } else {
        return exports.emit(random + '_admins_save_error', err);
      }
    });
  };

}).call(this);

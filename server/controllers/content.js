// Generated by CoffeeScript 1.3.3
(function() {
  var CategoriesModel, ContentsModel, IdGeneratorModel, categories_model, categoriesfindall, contents_model, idgenerator_model, setMember;

  contents_model = require('../model/contents-model');

  ContentsModel = contents_model.ContentsModel;

  idgenerator_model = require('../model/idgenerator-model');

  IdGeneratorModel = idgenerator_model.IdGeneratorModel;

  categories_model = require('../model/categories-model');

  CategoriesModel = categories_model.CategoriesModel;

  exports["new"] = function(req, res) {
    var member, result;
    member = setMember(req, res);
    if (member.role === 'admin') {
      res.redirect('/dashboard');
    }
    result = {
      uid: 0,
      title: '',
      pic: '',
      url: '',
      catename: '',
      catealias: '',
      content: '内容'
    };
    return categoriesfindall(req, res, result, 'new');
  };

  exports.add = function(req, res) {
    var member;
    member = setMember(req, res);
    if (member.role === 'admin') {
      res.redirect('/dashboard');
    }
    return idgenerator_model.getNewID(IdGeneratorModel, 'uid', function(newid) {
      var obj, random;
      console.log('new id value       = ' + newid);
      console.log('req.body.title     = ' + req.body.title);
      console.log('req.body.url       = ' + req.body.url);
      console.log('req.body.pic       = ' + req.body.pic);
      console.log('req.body.content   = ' + req.body.content);
      console.log('req.body.catealias = ' + req.body.catealias);
      console.log('req.body.catename  = ' + req.body.catename);
      console.log('member.username    = ' + member.username);
      random = require('../libs/random').random;
      obj = new ContentsModel();
      obj.uid = newid;
      obj.username = member.username;
      obj.url = req.body.url == '' ? newid : req.body.url;
      obj.title = req.body.title;
      obj.pic = req.body.pic;
      obj.content = req.body.content;
      obj.catename = req.body.catename;
      obj.catealias = req.body.catealias;
      contents_model.once(random + '_contents_save_success', function(result) {
        console.log('_contents_save_success');
        return res.redirect('/dashboard');
      });
      contents_model.once(random + '_contents_save_error', function(err) {
        return console.log('_contents_save_error' + err);
      });
      return contents_model.add(obj, random);
    });
  };

  exports.edit = function(req, res) {
    var member, random;
    member = setMember(req, res);
    random = require('../libs/random').random;
    contents_model.once(random + '_contents_edit_success', function(result) {
      console.log('_contents_edit_success = ' + result);
      return categoriesfindall(req, res, result, 'edit');
    });
    contents_model.once(random + '_edit_delete_error', function(err) {
      return console.log('_contents_edit_error = ' + err);
    });
    return contents_model.edit(ContentsModel, req.params.uid, random);
  };

  exports.save = function(req, res) {
    var member, random, updates;
    member = setMember(req, res);
    console.log('req.body.title     = ' + req.body.title);
    console.log('req.body.url       = ' + req.body.url);
    console.log('req.body.pic       = ' + req.body.pic);
    console.log('req.body.content   = ' + req.body.content);
    console.log('req.body.catealias = ' + req.body.catealias);
    console.log('req.body.catename  = ' + req.body.catename);
    console.log('req.params.uid     = ' + req.params.uid);
    random = require('../libs/random').random;
    updates = {
      title: req.body.title,
      url: req.body.url,
      pic: req.body.pic,
      catename: req.body.catename,
      catealias: req.body.catealias,
      content: req.body.content,
      mdate: new Date()
    };
    contents_model.once(random + '_contents_update_success', function(result) {
      console.log('_contents_update_success = ' + result);
      return res.redirect('/dashboard');
    });
    contents_model.once(random + '_contents_update_error', function(err) {
      return console.log('_contents_update_error = ' + err);
    });
    return contents_model.save(ContentsModel, {
      uid: req.params.uid
    }, updates, random);
  };

  exports.cancel = function(req, res) {
    return res.redirect('/dashboard');
  };

  exports["delete"] = function(req, res) {
    var member, random;
    member = setMember(req, res);
    random = require('../libs/random').random;
    contents_model.once(random + '_contents_delete_success', function(result) {
      console.log('_contents_delete_success = ' + result);
      return res.partial('back-end/success');
    });
    contents_model.once(random + '_contents_delete_error', function(err) {
      return console.log('_contents_delete_error = ' + err);
    });
    return contents_model["delete"](ContentsModel, req.params.uid, random);
  };

  exports.checkunique = function(req, res) {
    var member, random;
    console.log('req.params.url = ' + req.params.url);
    member = setMember(req, res);
    random = require('../libs/random').random;
    contents_model.once(random + '_contents_findurl_success', function(result) {
      console.log('_contents_findurl_success =' + result + '|');
      if (result == '' || result == null) {
        return res.partial('back-end/success');
      } else {
        return res.partial('back-end/unsuccess');
      }
    });
    contents_model.once(random + '_contents_findurl_error', function(err) {
      return console.log('_contents_findurl_error = ' + err);
    });
    return contents_model.findURL(ContentsModel, req.params.url, random);
  };

  exports.updateUsername = function(req, res, orgusername, username) {
    var random, updates;
    random = require('../libs/random').random;
    updates = {
      username: username,
      mdate: new Date()
    };
    contents_model.once(random + '_contents_update_success', function(result) {
      console.log('_contents_update_success = ' + result);
      return res.redirect('/dashboard');
    });
    contents_model.once(random + '_contents_update_error', function(err) {
      return console.log('_contents_update_error = ' + err);
    });
    return contents_model.save(ContentsModel, {
      username: orgusername
    }, updates, random);
  };

  exports.updateCate = function(req, res, conditions, updates) {
    var random;
    random = require('../libs/random').random;
    contents_model.once(random + '_contents_update_success', function(result) {
      console.log('_contents_update_success = ' + result);
      return res.redirect('/dashboard');
    });
    contents_model.once(random + '_contents_update_error', function(err) {
      return console.log('_contents_update_error = ' + err);
    });
    return contents_model.save(ContentsModel, conditions, updates, random);
  };

  categoriesfindall = function(req, res, content, type) {
    var member, random;
    member = setMember(req, res);
    random = require('../libs/random').random;
    categories_model.once(random + '_categories_findall_success', function(result) {
      return res.render('back-end/content', {
        member: member,
        content: content,
        categories: result,
        type: type
      });
    });
    categories_model.once(random + '_categories_findall_error', function(err) {
      return console.log('_categories_findall_error = ' + err);
    });
    return categories_model.findAll(CategoriesModel, random);
  };

  setMember = function(req, res) {
    var member;
    member = req.session.member ? req.session.member : req.cookies.member;
    return member = JSON.parse(member);
  };

}).call(this);
